[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R-Tricks",
    "section": "",
    "text": "Preface\nA place to store R tips and tricks. Migrated from Joplin",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "base-R.html",
    "href": "base-R.html",
    "title": "1  Base-R",
    "section": "",
    "text": "1.0.1 Issues with special characters ins windows user names\nI phrased the issue here &gt; &gt; ..we have at least one or two students with special characters in their windows username. This leads to the situation as described here. &gt; &gt; The errors are always a bit different. The latest student has this error message showing up in the RStudio GUI: &gt; &gt; &gt; Error in nchar(homeDir): invalid multibyte string, element 1 &gt; &gt; The RStudio console has several warning messages: &gt; &gt; &gt; Warning message: &gt; In normalizePath(path.expand(path), winslash, mustWork) : path[1]=\"C:/Users/N�me/Documents &gt; &gt; &gt; While the username in this case would be Nöme.\nMy guess is that the error comes when R tries to search for an .RProfile or .Renviron file in C:/Users/Nöme/Documents, but fails because of the special character. My hope is that we can prevent R to search in this path by manually setting a path to look for the said files. A quick refresher on R’s startup behaviour (from here):\nTwo files are read each time R starts (unless one of the command line options outlined above is used):\n\n.Renviron, the primary purpose of which is to set environment variables. These tell R where to find external programs and can hold user-specific information than needs to be kept secret, typically API keys.\n.Rprofile is a plain text file (which is always called .Rprofile, hence its name) that simply runs lines of R code every time R starts. If you want R to check for package updates each time it starts (as explained in the previous section), you simply add the relevant line somewhere in this file.\n\nA list of related files from here\n\n\n\n\n\n\n\n\n\nFile\nWho Controls\nLevel\nLimitations\n\n\n\n\n.Rprofile\nUser or Admin\nUser or Project\nNone, sourced as R code.\n\n\n.Renviron\nUser or Admin\nUser or Project\nSet environment variables only.\n\n\nRprofile.site\nAdmin\nVersion of R\nNone, sourced as R code.\n\n\nRenviron.site\nAdmin\nVersion of R\nSet environment variables only.\n\n\nrsession.conf\nAdmin\nServer\nOnly RStudio settings, only single repository.\n\n\nrepos.conf\nAdmin\nServer\nOnly for setting repositories.\n\n\n\nThe following locations are searched for these files (again, from here):\n\nR_HOME, the directory in which R is installed. The etc sub-directory can contain start-up files read early on in the start-up process. Find out where your R_HOME is with the R.home() command.\nHOME, the user’s home directory. Typically this is /home/username on Unix machines or C:\\Users\\username on Windows (since Windows 7). Ask R where your home directory is with, Sys.getenv(\"HOME\").\nR’s current working directory (CWD). This is reported by getwd().\n\nOnly one .Rprofile and one .Renviron files are used per session. The files in the CWD override the files in HOME which override the files in R_HOME. HOME is the problematic path in our case, but how is it set? This SO Answer provides some insights:\n\nThe home directory is set as follows: If environment variable R_USER is set, its value is used. Otherwise if environment variable HOME is set, its value is used. After those two user-controllable settings, R tries to find system-defined home directories. It first tries to use the Windows “personal” directory (typically C:)…\n\nWe solved it by creating a new Folder without speical characters C:\\Users\\safe-username and giving this folder write permission to all users. We also created a subfolder in “safe-username” named “R_libraries”. Then we created a two new Environmental Variables on System level as follows:\n\nR_USER: C:\\Users\\safe-username\nR_LIBS_USER: C:\\Users\\safe-username\\R_libraries\n\nNow, R searches for .Renviron and .Rprofile in C:\\Users\\safe-username and installs R Libraries in C:\\Users\\safe-username\\R_libraries. In this way, the special character issue is resolved. I’m not sure if this is the best method, but it works!\n\n\n1.0.2 Segmenting a vector based on a series of TRUE / FALSE values\nOften when dealing with movement trajectories, I need to build segments depending whether a condition (e.g. time difference between the samples) is true or false. The following fuction is well equipped for this:\nrle_id &lt;- function(vec){\n  x &lt;- rle(vec)$lengths\n  as.factor(rep(seq_along(x), times=x))\n  }\n\n\n1.0.3 Conntect to a (Postgres) Database\nlibrary(DBI)\ncon &lt;- dbConnect(RPostgres::Postgres(),\n                 dbname = \"mydb\",\n                 host = \"myhost\",\n                 port = 5432,\n                 user = \"myuser\",\n                 password = \"mypassword\")\n\n\n1.0.4 Remove sepecial characters\nhttps://stackoverflow.com/a/20495866\n&gt; iconv(\"äöüèéàüöä\", to=\"ASCII//TRANSLIT\")\n[1] \"aoueeauoa\"\nhttps://github.com/tidyverse/stringr/issues/149#issuecomment-289151373\nx &lt;- c(\"soñar\", \"camión\", \"égoïste\")\nstringi::stri_trans_general(x, \"Latin-ASCII\")\n#&gt; [1] \"sonar\"   \"camion\"  \"egoiste\"\n\n\n1.0.5 Readr: invalid multibyte string / encoding issue\nEven if the file is downloaded explicitly as UTF-8 from teams, the characters dont seem to be converted correctly. I get the following issue when trying to import it using readr.\nError in nchar(x, \"width\") : invalid multibyte string, element 1\nThis solved it:\nread_delim(\"file.csv\", \";\", locale = locale(encoding=\"latin1\"))\n\n\n1.0.6 Rowwise functions\nDplyr allows you to do elementwise calculations using rowwise. But this can be very slow, since it groups the whole dataframe by row. I created a little helper function that does rowwise calculations:\nelement_wise &lt;- function(..., fun = mean) {\n  do.call(cbind, list(...)) |&gt; apply(1, fun)\n}\n\n# e.g. (a nonsensical example)\n\nmtcars |&gt; \n  transmute(x = element_wise(gear, carb, fun = max))",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Base-R</span>"
    ]
  },
  {
    "objectID": "r-spatial.html",
    "href": "r-spatial.html",
    "title": "2  R Spatial",
    "section": "",
    "text": "2.0.1 Default startup options\nThese options could be included in rprofile or the like:",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>R Spatial</span>"
    ]
  },
  {
    "objectID": "r-spatial.html#set-relation_to_geometry-attribute-of-an-sf-object",
    "href": "r-spatial.html#set-relation_to_geometry-attribute-of-an-sf-object",
    "title": "2  R Spatial",
    "section": "2.1 Set relation_to_geometry attribute of an sf object",
    "text": "2.1 Set relation_to_geometry attribute of an sf object\nattribute variables are assumed to be spatially constant throughout all geometries\nlike so:\nst_agr(x) = \"constant\"\nst_agr(y) = \"constant\"\n\n2.1.1 Misc\n\nget linked software versions: sf::sf_extSoftVersion()\n\n\n\n2.1.2 Get the “negative” of a polygon\nI usually want this for visualisation purposes\n\nst_negative &lt;- function(x, dist = 0){\n  st_buffer(x, dist = dist) |&gt; \n    st_bbox() |&gt; \n    st_as_sfc() |&gt; \n    st_difference(x) \n}\n\n\nlibrary(sf)\n\nLinking to GEOS 3.12.2, GDAL 3.11.3, PROJ 9.4.1; sf_use_s2() is TRUE\n\nnc &lt;- read_sf(system.file(\"shape/nc.shp\",package=\"sf\")) |&gt; \n  st_union()\n\nnc |&gt; st_geometry() |&gt;  plot(col = 1)\n\n\n\n\n\n\n\nst_negative(nc, 0) |&gt; st_geometry() |&gt;  plot(col = 1)\n\n\n\n\n\n\n\n\n\n\n2.1.3 Bounding box to polygon\n\n2.1.3.1 Case 1\nAssuming you have a bounding box as four numeric values, xmin, ymin, xmax, ymax.\nThe following function will turn this into a polygon:\nllur2poly &lt;- function(xmin, ymin, xmax, ymax){\n  c(1,2,1,4,3,4,3,2,1,2) |&gt;\n    sapply(\\(x)c(xmin, ymin, xmax, ymax)[x]) |&gt;\n    matrix(ncol = 2, byrow = TRUE) |&gt;\n    list() |&gt;\n    st_polygon()\n}\nor so:\nllur2poly &lt;- \\(xmin,ymin,xmax,ymax, crs = 2056){\n  browser()\n  st_bbox(c(\n    xmin = xmin,\n    xmax = xmax,\n    ymin = ymin,\n    ymax = ymax\n  )) |&gt;\n    st_as_sfc() |&gt; \n    st_set_crs(crs)\n}\n\n\n2.1.3.2 Case 2\nassuming you have an object named towns:\nst_as_sfc(st_bbox(towns))\n\n\n2.1.3.3 Terra ext to sf Polygon\next(rastobj) |&gt; vect() |&gt; as(\"Spatial\") |&gt; st_as_sfc()\n\n\n\n2.1.4 Case 3 (Expanding the bounding box)\nSee my comment on this topic:\nnc &lt;- read_sf(system.file(\"shape/nc.shp\",package=\"sf\")) \n\nb &lt;- st_as_sfc(st_bbox(nc))\ncentroid = st_centroid(b)\nb3 &lt;- (b - centroid) * 1.1 + centroid\nrbind(b,b3) |&gt; st_sfc() |&gt; plot()\n\n\n\nimage\n\n\n\n\n2.1.5 sf’s example datasets\nI’m always wondering what spatial vector example data is provided by the sf package. This is how you find out:\nlibrary(tidyr)\nlibrary(dplyr)\nlibrary(purrr)\nlibrary(sf)\n\nsfs_sys_path &lt;- system.file(package=\"sf\")\nfiles &lt;- tibble(file = list.files(sfs_sys_path,\"shp$|sqlite$|gpkg$\", recursive = TRUE))\n\nfiles &lt;-\nfiles |&gt;\n  extract(file, \"extension\", \"\\\\.(.+)$\", remove = FALSE) |&gt;\n  mutate(\n    layers = map(file, \\(x) (st_layers(file.path(sfs_sys_path, x)))),\n  ) \n\n# this no longer works... fix this at some point!\n# (it would be nice if sf's print method for st_layers were available as a df\n# currently, the crs column is problematic)\n\nfiles$crs &lt;- map_chr(files$crs, \\(x)x[[1]]$input)\n\nknitr::kable(files)\n\n\n\n\n\n\n\n\n\n\n\n\n\nfile\nextension\nname\ngeometry_type\ndriver\nfeatures\nfields\ncrs_name\n\n\n\n\ngpkg/b_pump.gpkg\ngpkg\nb_pump\nPoint\nGPKG\n1\n1\nTransverse_Mercator\n\n\ngpkg/buildings.gpkg\ngpkg\nbuildings\nPolygon\nGPKG\n158\n2\nTransverse_Mercator\n\n\ngpkg/nc.gpkg\ngpkg\nnc.gpkg\nMulti Polygon\nGPKG\n100\n14\nNAD27\n\n\ngpkg/nospatial.gpkg\ngpkg\nnospatial\nNA\nGPKG\n1\n2\nNA\n\n\ngpkg/tl.gpkg\ngpkg\ntl_2016_us_state\nPolygon\nGPKG\n1\n1\nNAD83\n\n\nshape/nc.shp\nshp\nnc\nPolygon\nESRI Shapefile\n100\n14\nNAD27\n\n\nshape/olinda1.shp\nshp\nolinda1\nPolygon\nESRI Shapefile\n470\n6\nGRS 1980(IUGG, 1980)\n\n\nshape/storms_xyz_feature.shp\nshp\nstorms_xyz_feature\n3D Line String\nESRI Shapefile\n71\n1\nNA\n\n\nshape/storms_xyz.shp\nshp\nstorms_xyz\n3D Line String\nESRI Shapefile\n71\n0\nNA\n\n\nshape/storms_xyzm_feature.shp\nshp\nstorms_xyzm_feature\nMeasured Line String\nESRI Shapefile\n71\n1\nNA\n\n\nshape/storms_xyzm.shp\nshp\nstorms_xyzm\nMeasured Line String\nESRI Shapefile\n71\n0\nNA\n\n\nsqlite/b.sqlite\nsqlite\na.sqlite\nPoint\nSQLite\n1\n2\nNA\n\n\nsqlite/meuse.sqlite\nsqlite\nmeuse.sqlite\nPoint\nSQLite\n155\n12\nAmersfoort / RD New\n\n\nsqlite/nc.sqlite\nsqlite\nnc.sqlite\nMulti Polygon\nSQLite\n100\n14\nNAD27\n\n\nsqlite/test3.sqlite\nsqlite\nTowns\nPoint\nSQLite\n8101\n5\nWGS 84 / UTM zone 32N\n\n\nsqlite/test3.sqlite\nsqlite\nHighWays\nPoint\nSQLite\n10\n2\nWGS 84 / UTM zone 32N\n\n\nsqlite/test3.sqlite\nsqlite\nRegions\nPoint\nSQLite\n10\n2\nWGS 84 / UTM zone 32N\n\n\n\nTo import a file\n\nread_sf(system.file(\"sqlite/test3.sqlite\",package=\"sf\")) \n\nWarning in CPL_read_ogr(dsn, layer, query, as.character(options), quiet, :\nautomatically selected the first layer in a data source containing more than\none.\n\n\nSimple feature collection with 8101 features and 5 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 319224 ymin: 3934674 xmax: 1308585 ymax: 5214373\nProjected CRS: WGS 84 / UTM zone 32N\n# A tibble: 8,101 × 6\n   Name               Peoples LocalCounc County Region           Geometry\n   &lt;chr&gt;                &lt;int&gt;      &lt;int&gt;  &lt;int&gt;  &lt;int&gt;        &lt;POINT [m]&gt;\n 1 Brozolo                435          1      0      0 (427002.8 4996361)\n 2 Campiglione-Fenile    1284          1      0      0 (367470.5 4962414)\n 3 Canischio              274          1      0      0 (390084.1 5025552)\n 4 Cavagnolo             2281          1      0      0   (425247 5000248)\n 5 Magliano Alfieri      1674          1      0      0 (426418.9 4957737)\n 6 Mango                 1334          1      0      0 (432661.5 4948470)\n 7 Manta                 3363          1      0      0 (379960.2 4941389)\n 8 Marene                2703          1      0      0   (399494 4946145)\n 9 Margarita             1297          1      0      0 (395282.6 4917524)\n10 Martiniana Po          667          1      0      0 (370131.2 4942846)\n# ℹ 8,091 more rows\n\nread_sf(system.file(\"sqlite/test3.sqlite\",package=\"sf\"), \"Towns\") # more specific\n\nSimple feature collection with 8101 features and 5 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 319224 ymin: 3934674 xmax: 1308585 ymax: 5214373\nProjected CRS: WGS 84 / UTM zone 32N\n# A tibble: 8,101 × 6\n   Name               Peoples LocalCounc County Region           Geometry\n   &lt;chr&gt;                &lt;int&gt;      &lt;int&gt;  &lt;int&gt;  &lt;int&gt;        &lt;POINT [m]&gt;\n 1 Brozolo                435          1      0      0 (427002.8 4996361)\n 2 Campiglione-Fenile    1284          1      0      0 (367470.5 4962414)\n 3 Canischio              274          1      0      0 (390084.1 5025552)\n 4 Cavagnolo             2281          1      0      0   (425247 5000248)\n 5 Magliano Alfieri      1674          1      0      0 (426418.9 4957737)\n 6 Mango                 1334          1      0      0 (432661.5 4948470)\n 7 Manta                 3363          1      0      0 (379960.2 4941389)\n 8 Marene                2703          1      0      0   (399494 4946145)\n 9 Margarita             1297          1      0      0 (395282.6 4917524)\n10 Martiniana Po          667          1      0      0 (370131.2 4942846)\n# ℹ 8,091 more rows\n\n\n\n\n2.1.6 Country Borders\nRNaturalEarth has many worldwide datasets to use:\n\nlibrary(rnaturalearth)\nsouthamerica &lt;- ne_countries(returnclass=\"sf\", continent = \"South America\")\n\nplot(southamerica[\"admin\"])\n\n\n\n\n\n\n\n\n\n\n\nimage\n\n\n\n\n2.1.7 Erase\nhttps://github.com/r-spatial/sf/issues/346#issuecomment-302046063\n\nst_erase = function(x, y) st_difference(x, st_union(st_combine(y)))\n\n\n\n2.1.8 Cast POINT to LINESTRING\nWhen casting points to linestring with group_by() |&gt; summarise() |&gt; st_cast(\"LINESTRING\") I need to pass the option do_union = FALSE to summarise(), otherwise the order of the points is not preserved (see my GitHub issue on this).\n\n\n2.1.9 Creating Simple Feature Geometries\n\n2.1.9.1 From simple vectors\nFrom time to time, I need to create simple feature geometries out of thin air. Each type of simple feature requires a specific data type. They could be inferred (since they make a lot of sense) but I’m lazy, hence the documentation here:\nTodo:\n\nvisualize the results (quarto to github-markdown)\nmake more complex examples (multiple points, multiple multipoints etc)\nadd multipolygon example\n\n\nst_point(c(0, 0))\n\nPOINT (0 0)\n\nst_multipoint(matrix(c(0, 0, 1, 1), ncol = 2, byrow = TRUE))\n\nMULTIPOINT ((0 0), (1 1))\n\nst_linestring(matrix(c(0, 0, 1, 1), ncol = 2, byrow = TRUE))\n\nLINESTRING (0 0, 1 1)\n\nst_multilinestring(\n    list(\n        matrix(c(0, 0, 1, 1), ncol = 2, byrow = TRUE),\n        matrix(c(0, 1, 1, 0), ncol = 2, byrow = TRUE)\n    )\n)\n\nMULTILINESTRING ((0 0, 1 1), (0 1, 1 0))\n\nst_polygon(\n    list(\n        matrix(\n            # OGC Simple feature: exterior ring is counter clockwise\n            c(\n                0, 0,\n                1, 0,\n                1, 1,\n                0, 1,\n                0, 0\n            ),\n            ncol = 2, byrow = TRUE\n        )\n    )\n) \n\nPOLYGON ((0 0, 1 0, 1 1, 0 1, 0 0))\n\nst_polygon(\n    list(\n        matrix(\n            c(\n                0, 0,\n                1, 0,\n                1, 1,\n                0, 1,\n                0, 0\n            ),\n            ncol = 2, byrow = TRUE\n        ),\n        # OGC Simple feature: interior ring is clockwise\n        matrix(\n            c(\n                0.25,0.25,\n                0.25,0.75,\n                0.75,0.75,\n                0.75,0.25,\n                0.25,0.25\n\n            ),\n            ncol = 2, byrow = TRUE\n        )\n    )\n)\n\nPOLYGON ((0 0, 1 0, 1 1, 0 1, 0 0), (0.25 0.25, 0.25 0.75, 0.75 0.75, 0.75 0.25, 0.25 0.25))\n\n\n\n\n2.1.9.2 from data.frame columns\nSometimes recive geodata stored in columns of a data.frame. Mostly, these are point objects, which can be converted to a geometry using the following code:\ndf |&gt;\n    # note the order: lon - lat, which is x, y ! \n    st_as_sf(coords = c(\"lon\",\"lat\"),crs = 4326)\nRarely, they are lines (tipically origin - destination):\ndf |&gt;\n    mutate(geom = pmap(list(start_lon,start_lat, end_lon,end_lat), \\(x1, y1, x2, y2) st_linestring(matrix(c(x1, y1, x2, y2), ncol = 2, byrow = TRUE))))  |&gt;\n    st_sf(crs = 4326) \n\n\n\n2.1.10 Working with a list of layers\nBoth ggplot2 and tmap work with the layers and + idiom. Using functional programming I can create a list of layers and concatenate them all with Reduce. This is a practical method when, e.g. I have a single sf object but want to selectively activate / deactivate parts of that layer in tmap. To do this, I split the sf object into a list of obects, create a tmap layer for each object and then concatenate them as described. E.g. take the buildings dataset from the sf package.\nbuildings &lt;- read_sf(system.file(\"gpkg/buildings.gpkg\",package=\"sf\"))\n\n# say we want to selectively activate / deactivate a column named `cat_fac`\nbuildings$cat_fac &lt;- cut(buildings$cat, seq(0,ceiling(max(buildings$cat)/20)*20,20))\n\n# this is how it looks\nggplot(buildings) + geom_sf(aes(fill = cat_fac))\n\n\n\nimage\n\n\nbuildings |&gt;\n    (\\(x)split(x, x$cat_fac))() |&gt;\n    imap(\\(x,y)tm_shape(x,name = y) + tm_polygons(col = \"red\")) |&gt;\n    Reduce(\"+\", x = _)\n\n\n\nimage\n\n\n\n\n2.1.11 Tmap V4\nThe new API takes a bit getting used to. Here is how to change the color palette to Spectral:\ntm_shape(myrast) + \n  tm_raster(col.scale = tm_scale_continuous(values = cols4all::c4a(palette = \"-Spectral\")))\n\n\n2.1.12 Download swissAlti3D tiles with custom extent\nhttps://gist.github.com/ratnanil/83d4cd439300e18b7666e4efde59ddf2\n\n\n2.1.13 Map Matching\n\nlibrary(sf)\nlibrary(tmap)\n\nHighWays &lt;- read_sf(system.file(\"sqlite/test3.sqlite\",package=\"sf\"), \"HighWays\")[6, ] \n\n# since we want to find the closest location on the road over ALL roads\n# we need to create a union of the roads first.\nHighWays &lt;- st_union(HighWays)\n\n# Let's simulate 1000 GPS locations within 3km of the highway\ngps_locations &lt;- HighWays |&gt; st_buffer(3000) |&gt; st_sample(100)\n\n# Now we can get the nearset point for each GPS location\nnearest &lt;- st_nearest_points(gps_locations, HighWays)\n\n# The output is a line for each point (see plot below)\n# Now we need convert the output from LINE to POINT\nnear_p &lt;- st_cast(nearest, \"POINT\")\n\n# now we subset the points. Uneven numbers are the original\n# points, even numbers are the new, mapmatched points.\nnear_from &lt;- near_p[c(TRUE, FALSE)]\nnear_to &lt;- near_p[c(FALSE,TRUE)]\n\ntm_shape(HighWays) + tm_lines() +\n  tm_shape(nearest) + tm_lines(lty = 3) +\n  tm_shape(near_from) + tm_dots() +\n  tm_shape(near_to) + tm_dots(col = \"red\")\n\n\n\n\n\n\n\n\n\n\n\nimage\n\n\n\n\n2.1.14 data.frame method for sf_layers-object\nThe function st_layers() returns an sf_layers object, which is basically a list that could easily be coerced to a data.frame. This is not possible by default, I first have to create a new method for a generic from another package (from here).\nI created an issue for this: https://github.com/r-spatial/sf/issues/2412\n# OUTDATED??\n\n\nas.data.frame.sf_layers &lt;- \\(x) sf:::print.sf_layers(x) |&gt; data.frame()\nas_tibble.sf_layers &lt;- \\(x) as_tibble(as.data.frame(x))      # optional, creates an as_tibble method\n# test this on an sqlite dataset:\nlayers &lt;- st_layers(system.file(\"sqlite/test3.sqlite\",package=\"sf\")) \n\nas.data.frame(layers)\nas_tibble(layers)",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>R Spatial</span>"
    ]
  },
  {
    "objectID": "r-spatial.html#terra",
    "href": "r-spatial.html#terra",
    "title": "2  R Spatial",
    "section": "2.2 terra",
    "text": "2.2 terra\n\n2.2.1 Datatypes\nFrom here\n\n\n\nData type\nMinimum value\nMaximum value\n\n\n\n\nINT1U\n0\n255\n\n\nINT2S\n-32,767\n32,767\n\n\nINT2U\n0\n65,534\n\n\nINT4S\n-2,147,483,647\n2,147,483,647\n\n\nINT4U\n0\n4,294,967,296\n\n\nFLT4S\n-3.4e+38\n3.4e+38\n\n\nFLT8S\n-1.7e+308\n1.7e+308\n\n\n\n\n\n2.2.2 Rasterize a vector dataset\nzg &lt;- st_read(\"https://api3.geo.admin.ch/rest/services/api/MapServer/ch.swisstopo.swissboundaries3d-kanton-flaeche.fill/9?geometryFormat=geojson&sr=4326\")\n\nzg &lt;- st_transform(zg, 2056)\n\n# 1. Create a template. \n#    The extent could come from a different object\ntemplate &lt;- rast(res = 1000, crs = crs(zg), extent = ext(zg))\n\nzg_ras &lt;- rasterize(zg, template, field = 1)\n\nplot(zg_ras)",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>R Spatial</span>"
    ]
  },
  {
    "objectID": "ggplot.html",
    "href": "ggplot.html",
    "title": "3  Ggplot",
    "section": "",
    "text": "3.1 ggplot2",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Ggplot</span>"
    ]
  },
  {
    "objectID": "ggplot.html#ggplot2",
    "href": "ggplot.html#ggplot2",
    "title": "3  Ggplot",
    "section": "",
    "text": "3.1.1 Limit plot to bounding box\ncoord_sf() in ggplot2 does not seem to accept a geometry to limit the axes. You have to do it manually, like so:\nlibrary(rnaturalearth)\n\nsouthamerica &lt;- ne_countries(returnclass=\"sf\", continent = \"South America\")\n\nbb &lt;- st_bbox(southamerica[southamerica$admin == \"Brazil\",])\n\nggplot(southamerica) +\n geom_sf() +\n coord_sf(xlim = c(bb[\"xmin\"], bb[\"xmax\"]),ylim = c(bb[\"ymin\"], bb[\"ymax\"]))\n\n\n3.1.2 Add number of observations to boxplot\nggplot(mtcars, aes(as.character(cyl), disp)) +\n  geom_boxplot() +\n  stat_summary(geom = \"label\", fun.data = \\(x)c(y = median(x), label = length(x)))\n\n\n\nimage\n\n\n\n\n3.1.3 Customize labelling in facet_wrap/facet_grid\nTo customize the labelling on the “strips” in facet_wrap/facet_grid, proceed as follows. Note how the name of the column (mycol) is an argument of the labeller() function, while the input to that argument is a (anonymus) function which takes a string as an input and returns a string. The returned string is used as the label.\nfacet_wrap(~mycol, labeller = labeller(mycol = \\(x) paste(\"Gruppe\",x)),nrow = nrows)\n\n\n\n3.1.4 Transparent background\nAdd the following theme element to the plot (source):\ntheme(\n  panel.background = element_rect(fill=\"transparent\"),\n  plot.background = element_rect(fill=\"transparent\", color=NA)\n  )\n\n\n3.1.5 Annotating outside plot area:\nlibrary(ggplot2)\nlibrary(cowplot)\n\np &lt;- ggplot(mtcars, aes(disp, mpg)) + geom_point() +\n  facet_wrap(~cyl)\n\nggdraw() +\n  draw_plot(p,.5, .5, .75, .75,hjust = .5, vjust = .5) +\n  draw_line(x = c(.1, .5), y = c(.9, .5), arrow = grid::arrow(type = \"closed\")) +\n  draw_label(\"What a special subset\",x = 0.05, y = .95,hjust = 0)\n\n\n\nimage",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Ggplot</span>"
    ]
  },
  {
    "objectID": "rstudio.html",
    "href": "rstudio.html",
    "title": "4  RStudio",
    "section": "",
    "text": "4.1 RStudio from bash\nI created a program that writes a Rstudio-Project file. Its unclear what of the process I should document where. Some are Linux / Ubuntu tips, points are installation diary items. I did this in a why that I want to (vibe-) code more tools later on.\nThe program is installed here:\nNow, I added this to zsh.rc\nNow I can run:\nThe program is tracked here: https://github.com/ratnanil/rproj-create",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>RStudio</span>"
    ]
  },
  {
    "objectID": "rstudio.html#rstudio-from-bash",
    "href": "rstudio.html#rstudio-from-bash",
    "title": "4  RStudio",
    "section": "",
    "text": "mkdir -p ~/bin/rproj_create\nnvim ~/bin/rproj_create/rproj_create # ← write program\n\nchmod +x ~/bin/rproj_create/rproj_create\n\n# Add rproj_create to path\nexport PATH=\"$HOME/bin/rproj_create:$PATH\"\n\n\n\n\n\n\n\n\nCommand\nResult\n\n\n\n\ncreate_rproj_file\ncreates project.Rproj\n\n\ncreate_rproj_file \"Zürich Projekt\"\ncreates Zürich_Projekt.Rproj\n\n\ncreate_rproj_file \"Zürich Projekt\" zurich.Rproj\ncreates zurich.Rproj\n\n\ncreate_rproj_file MyProject --NumSpacesForTab 4\ncreates MyProject.Rproj",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>RStudio</span>"
    ]
  }
]